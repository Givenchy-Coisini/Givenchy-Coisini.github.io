(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{540:function(t,s,a){"use strict";a.r(s);var n=a(2),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h3",{attrs:{id:"第一章-typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一章-typescript"}},[t._v("#")]),t._v(" 第一章 TypeScript")]),t._v(" "),a("ul",[a("li",[t._v("任何可以使用JavaScript来编写的应用，最终都会使用JavaScript来编写。")]),t._v(" "),a("li",[t._v("任何可以使用JavaScript来编写的优秀的大型应用，最终都会由TypeScript编写。")])]),t._v(" "),a("h4",{attrs:{id:"_1-1编程语言的类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-1编程语言的类型"}},[t._v("#")]),t._v(" 1.1编程语言的类型")]),t._v(" "),a("ul",[a("li",[t._v("动态类型语言\n"),a("ul",[a("li",[t._v("运行的时候才会检查数据类型 比如JS")]),t._v(" "),a("li",[t._v("也就是说用JavaScript来写的代码，只有在运行的时候才会发现有啥错误，这样比较危险，于是前端就开始造轮子，比如ESlint（静态代码检查器）。")])])]),t._v(" "),a("li",[t._v("静态类型语言\n"),a("ul",[a("li",[t._v("数据类型检查是在编译阶段")])])])]),t._v(" "),a("h4",{attrs:{id:"_1-2-typescript究竟是什么"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-typescript究竟是什么"}},[t._v("#")]),t._v(" 1.2 TypeScript究竟是什么")]),t._v(" "),a("ul",[a("li",[t._v("JavaScript that scales")]),t._v(" "),a("li",[t._v("静态类型风格的类型系统")]),t._v(" "),a("li",[t._v("从ES6到ES10甚至是ESNEXT的语法支持")])]),t._v(" "),a("blockquote",[a("p",[t._v("为了保证不同浏览器对代码的兼容性我们采用babel，但是TypeScript是一举两得。")])]),t._v(" "),a("ul",[a("li",[t._v("兼容各种浏览器，各种系统，各种服务器，完全开源")])]),t._v(" "),a("h4",{attrs:{id:"_1-3为什么要使用typescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-3为什么要使用typescript"}},[t._v("#")]),t._v(" 1.3为什么要使用TypeScript")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("程序更容易理解")]),t._v(" "),a("ol",[a("li",[t._v("问题：函数或者方法输入输出的参数类型、外部条件等")]),t._v(" "),a("li",[t._v("动态语言的约束：需要手动调试等过程")]),t._v(" "),a("li",[t._v("有了TypeScript：代码本身就可以回答上述问题")])])]),t._v(" "),a("li",[a("p",[t._v("效率更高")]),t._v(" "),a("ol",[a("li",[t._v("在不同的代码块和定义中进行跳转")]),t._v(" "),a("li",[t._v("代码自动补全")]),t._v(" "),a("li",[t._v("丰富的接口提示")])])]),t._v(" "),a("li",[a("p",[t._v("更少的错误")]),t._v(" "),a("ol",[a("li",[t._v("编译期间能够发现大部分错误")]),t._v(" "),a("li",[t._v("杜绝一些比较常见错误")])])]),t._v(" "),a("li",[a("p",[t._v("非常好的包容性")]),t._v(" "),a("ol",[a("li",[t._v("完全兼容JavaScript")]),t._v(" "),a("li",[t._v("第三方库可以单独编写类型文件")]),t._v(" "),a("li",[t._v("流行项目都支持TypeScript")])])]),t._v(" "),a("li",[a("p",[t._v("一点缺点")]),t._v(" "),a("ol",[a("li",[t._v("增加了一些学习成本")]),t._v(" "),a("li",[t._v("短期内增加了一些开发成本")])])])]),t._v(" "),a("h4",{attrs:{id:"_1-4typescript开发环境搭建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4typescript开发环境搭建"}},[t._v("#")]),t._v(" 1.4TypeScript开发环境搭建")]),t._v(" "),a("p",[t._v("如果你想使用TypeScript来编写代码，你需要安装一下它的开发环境，这并不复杂。")]),t._v(" "),a("h5",{attrs:{id:"_1-4-1安装node的运行环境"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-1安装node的运行环境"}},[t._v("#")]),t._v(" 1.4.1安装node的运行环境")]),t._v(" "),a("p",[t._v("可以到 nodejs 的官网（https://nodejs.org）下载。")]),t._v(" "),a("p",[t._v("如果已经安装，可以打开命令行工具，然后使用"),a("code",[t._v("node-v")]),t._v(" 命令直接查看安装的版本，但是一般还有一个命令需要检测一下，就是"),a("code",[t._v("npm -v")]),t._v(" 如果这两个命令都可以输出版本号，说明你的Node安装已经没有任何问题了。")]),t._v(" "),a("h5",{attrs:{id:"_1-4-2全局安装ts"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-2全局安装ts"}},[t._v("#")]),t._v(" 1.4.2全局安装ts")]),t._v(" "),a("p",[t._v("你要使用 TypeScript 先要在你的系统中全局安装一下"),a("code",[t._v("TypeScript")]),t._v("，这里你可以直接在 VSCode 中进行安装，安装命令可以使用 npm 也可以使用 yarn")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" typescript -g\n")])])]),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("yarn")]),t._v(" global "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" typescript\n")])])]),a("p",[t._v("安装完毕以后")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("tsc -v\n\nVersion "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4.3")]),t._v(".5\n")])])]),a("h5",{attrs:{id:"_1-4-3-建立和编译ts文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-3-建立和编译ts文件"}},[t._v("#")]),t._v(" 1.4.3.建立和编译ts文件")]),t._v(" "),a("ul",[a("li",[t._v("新建文件夹，新建一个ts文件")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fyj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" web"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"mwj"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("web"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fyj")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),a("ul",[a("li",[t._v("这个时候使用"),a("code",[t._v("node hello.ts")]),t._v(" 是执行不成功的，因为Node不能直接运行 TypeScript 文件，需要"),a("code",[t._v("tsc hello.ts")]),t._v(" 转换一下  新生成了一个hello.js 文件，需要node hello.js 在终端里就可以顺利的输出 “mwj”的字符了。")])]),t._v(" "),a("h5",{attrs:{id:"_1-4-4-ts-node-的安装和使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-4-4-ts-node-的安装和使用"}},[t._v("#")]),t._v(" 1.4.4.ts-node 的安装和使用")]),t._v(" "),a("p",[t._v("但是这样操作的效率实在是太低了，你可以使用"),a("code",[t._v("ts-node")]),t._v("插件来解决这个问题，有了这个插件，我们就不用再编译了，而使用"),a("code",[t._v("ts-node")]),t._v("就可以直接看到编写结果。")]),t._v(" "),a("p",[t._v("使用"),a("code",[t._v("npm")]),t._v("命令来全局安装，直接在命令行输入下面的命令：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("npm install "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("g ts"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v("node\n")])])]),a("p",[t._v("安装完成后，就可以在命令中直接输入如下命令，来查看结果了。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("ts-node hello.ts\n")])])]),a("p",[t._v("如果执行完以后有报错，输入以下指令就可以完美解决")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" -D tslib @types/node\n")])])]),a("h4",{attrs:{id:"_1-5typescript的静态类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5typescript的静态类型"}},[t._v("#")]),t._v(" 1.5TypeScript的静态类型")]),t._v(" "),a("p",[t._v("TypeScript 的一个最主要特点就是可以定义静态类型，英文是 Static Typing。那到底是什么意思那？你可以简单的理解“静态类型”为，就是你一旦定义了，就不可以再改变了。比如你是男人就是男人，一辈子都要作男人；是女人就是女人，一辈子都是女人。这个事不可以改变！但是它还有一些特性，这个并不像表面的那么简单。")]),t._v(" "),a("p",[t._v("你可以在上一小节的文件夹下建立一个新的"),a("code",[t._v("hello2.ts")]),t._v("文件，然后写下这段代码：")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这就是最简单的定义一个数字类型的"),a("code",[t._v("count")]),t._v("的变量，这里的"),a("code",[t._v(": number")]),t._v("就是定义了一个静态类型。这样定义后"),a("code",[t._v("count")]),t._v("这个变量在程序中就永远都是数字类型了，不可以改变了。比如我们这时候给"),a("code",[t._v("count")]),t._v("复制一个字符串，它就报错了。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//错误代码")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ncount "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jspang"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("但这只是最简单的理解，再往深一层次理解，你会发现这时候的"),a("code",[t._v("count")]),t._v("变量,可以使用"),a("code",[t._v("number")]),t._v("类型上所有的属性和方法。我们可以通过在"),a("code",[t._v("count")]),t._v("后边打上一个"),a("code",[t._v(".")]),t._v("看出这个特性，并且编辑器会给你非常好的提示。这也是为什么我喜欢用"),a("code",[t._v("VScode")]),t._v("编辑器的一个原因。")]),t._v(" "),a("h5",{attrs:{id:"_1-5-1自定义静态类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-1自定义静态类型"}},[t._v("#")]),t._v(" 1.5.1自定义静态类型")]),t._v(" "),a("p",[t._v("你还可以自己去定义一个静态类型，比如现在你定义一个"),a("code",[t._v("女朋友")]),t._v("的类型，然后在声明变量的时候，就可以使用这个静态类型了，看下面的代码。")]),t._v(" "),a("div",{staticClass:"language-js extra-class"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Npy")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//接口")]),t._v("\n  uname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" string"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" number"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" junjun"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Npy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  uname"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"君君"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("18")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("p",[t._v("这时候你如果声明变量，跟自定义不一样，"),a("code",[t._v("VSCode")]),t._v("直接就会报错。需要注意的是，这时候"),a("code",[t._v("xiaohong")]),t._v("变量也具有"),a("code",[t._v("uname")]),t._v("和"),a("code",[t._v("age")]),t._v("属性了。")]),t._v(" "),a("p",[t._v("这节课你需要记住的是，如果使用了静态类型，不仅意味着变量的类型不可以改变，还意味着类型的属性和方法也跟着确定了。这个特点就大大提高了程序的健壮性，并且编辑器这时候也会给你很好的语法提示，加快了你的开发效率。")]),t._v(" "),a("p",[t._v("随着你不断的深入学习，你会对这两个优点有更深的理解。")]),t._v(" "),a("h5",{attrs:{id:"_1-5-2基础类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-2基础类型"}},[t._v("#")]),t._v(" 1.5.2基础类型")]),t._v(" "),a("p",[t._v("原始值类型：")]),t._v(" "),a("p",[t._v("除了Object以外的所有类型都是不可变的(值本身无法被改变)。JavaScript中的字符串是不可变的，js中对字符串的操作一定返回了一个新的字符串，原始的字符串没有改变，我们称这些类型的值为“原始值”")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在 TypeScript 静态类型分为两种，一种是基础静态类型，一种是对象类型，这两种都经常使用，非常重要，我们先来看一下什么是基础静态类型。")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" isDone"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("boolean")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" firstName"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fyj'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" message"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token template-string"}},[a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("hello, ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("firstName"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v(", age is ")]),a("span",{pre:!0,attrs:{class:"token interpolation"}},[a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("${")]),t._v("age"),a("span",{pre:!0,attrs:{class:"token interpolation-punctuation punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token template-punctuation string"}},[t._v("`")])]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" u"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" num"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("undefined")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// undefined 和 null 是所有类型的子类型")]),t._v("\n")])])]),a("h5",{attrs:{id:"_1-5-3any类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-3any类型"}},[t._v("#")]),t._v(" 1.5.3any类型")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" notSure"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("any")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),t._v("\nnotSure "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),t._v("\n\nnotSure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("myName\nnotSure"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 从后端接口取回的数据不知道是什么类型的")]),t._v("\n")])])]),a("h5",{attrs:{id:"_1-5-4联合类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-4联合类型"}},[t._v("#")]),t._v(" 1.5.4联合类型")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" numberOrString"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("23")]),t._v("\nnumberOrString "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'abc'")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 这个时候再赋值为布尔类型就会报错")]),t._v("\n")])])]),a("h5",{attrs:{id:"_1-5-5数组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-5数组"}},[t._v("#")]),t._v(" 1.5.5数组")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" arrOfNumbers"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\narrOfNumber"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("push")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// push 字符串会报错")]),t._v("\n\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" xiaoJieJies"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" String"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"谢大脚"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"刘英"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"小红"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h5",{attrs:{id:"_1-5-6元组"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-5-6元组"}},[t._v("#")]),t._v(" 1.5.6元组")]),t._v(" "),a("p",[t._v("想放不用类型的数组 就可以元组")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" user"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fyj'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-6interface-接口"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-6interface-接口"}},[t._v("#")]),t._v(" 1.6Interface 接口")]),t._v(" "),a("ul",[a("li",[t._v("对对象的形状shape 进行描述")]),t._v(" "),a("li",[t._v("对class 进行抽象")]),t._v(" "),a("li",[t._v("Duck Typing 鸭子类型")])]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("interface")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Person")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("string")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 加个? 表示可选")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("readonly")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 只读")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" fyj"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" Person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    id："),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("123")]),t._v("\n    name"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'fyj'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n    age"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])])]),a("h4",{attrs:{id:"_1-7函数和类型推断"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-7函数和类型推断"}},[t._v("#")]),t._v(" 1.7函数和类型推断")]),t._v(" "),a("div",{staticClass:"language-typescript extra-class"},[a("pre",{pre:!0,attrs:{class:"language-typescript"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// functions.ts")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("number")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//括号后面的number 代表返回值是number类型")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("y\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" result "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);